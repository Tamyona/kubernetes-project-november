apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  labels:
    app: {{ .Values.deployment.labels.app }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.deployment.selector.matchLabels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.labels.app }}
    spec:
      strategy:
        type: {{ .Values.deployment.strategy.type }}
        rollingUpdate:
          maxUnavailable: {{ .Values.deployment.strategy.rollingUpdate.maxUnavailable }}
          maxSurge: {{ .Values.deployment.strategy.rollingUpdate.maxSurge }}
      containers:
      - name: {{ .Values.deployment.name }}
        image: ailitik/web_api:1.0.0
        ports:
        - containerPort: {{ .Values.deployment.containerPort }}
        env:
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.deployment.env.apiHostConfigMap.name }}
              key: {{ .Values.deployment.env.apiHostConfigMap.key }}            
        - name: PORT
          value: {{ .Values.deployment.env.port }}
        resources:
          requests:
            cpu: {{ .Values.deployment.resources.requests.cpu }}
            memory: {{ .Values.deployment.resources.requests.memory }}
          limits:
            cpu: {{ .Values.deployment.resources.limits.cpu }}
            memory: {{ .Values.deployment.resources.limits.memory }}
        readinessProbe:
          httpGet:
            path: {{ .Values.deployment.healthCheckPath }}
            port: {{ .Values.deployment.containerPort }}
          initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
        livenessProbe:
          httpGet:
            path: {{ .Values.deployment.healthCheckPath }}
            port: {{ .Values.deployment.containerPort }}
          initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
        # startupProbe:
        #   httpGet:
        #     path: /health
        #     port: 3000
        #   failureThreshold: 30
        #   periodSeconds: 5
        
